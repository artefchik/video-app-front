/**
 * Generated by orval v6.28.2 üç∫
 * Do not edit manually.
 * Video-app
 * REST API documentation
 * OpenAPI spec version: 1.0.0
 */
import { $api } from './api';
import type { BodyType } from './api';
export interface User {
    /** E-mail */
    email: string;
    /** id */
    id: number;
}

export interface CreateUserDto {
    /** E-mail */
    email: string;
    /** Password */
    password: string;
}

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];

/**
 * @summary Create a user
 */
export const usersControllerCreate = (
    createUserDto: BodyType<CreateUserDto>,
    options?: SecondParameter<typeof $api>,
) => {
    return $api<User>(
        {
            url: `/users`,
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            data: createUserDto,
        },
        options,
    );
};

/**
 * @summary Get all users
 */
export const usersControllerGetAll = (
    options?: SecondParameter<typeof $api>,
) => {
    return $api<User>({ url: `/users`, method: 'GET' }, options);
};

export const authControllerLogin = (
    createUserDto: BodyType<CreateUserDto>,
    options?: SecondParameter<typeof $api>,
) => {
    return $api<void>(
        {
            url: `/auth/login`,
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            data: createUserDto,
        },
        options,
    );
};

export const authControllerRegistration = (
    createUserDto: BodyType<CreateUserDto>,
    options?: SecondParameter<typeof $api>,
) => {
    return $api<void>(
        {
            url: `/auth/registration`,
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            data: createUserDto,
        },
        options,
    );
};

export const authControllerLogout = (
    options?: SecondParameter<typeof $api>,
) => {
    return $api<void>({ url: `/auth/logout`, method: 'POST' }, options);
};

export const authControllerGetToken = (
    options?: SecondParameter<typeof $api>,
) => {
    return $api<void>({ url: `/auth/token`, method: 'GET' }, options);
};

export type UsersControllerCreateResult = NonNullable<
    Awaited<ReturnType<typeof usersControllerCreate>>
>;
export type UsersControllerGetAllResult = NonNullable<
    Awaited<ReturnType<typeof usersControllerGetAll>>
>;
export type AuthControllerLoginResult = NonNullable<
    Awaited<ReturnType<typeof authControllerLogin>>
>;
export type AuthControllerRegistrationResult = NonNullable<
    Awaited<ReturnType<typeof authControllerRegistration>>
>;
export type AuthControllerLogoutResult = NonNullable<
    Awaited<ReturnType<typeof authControllerLogout>>
>;
export type AuthControllerGetTokenResult = NonNullable<
    Awaited<ReturnType<typeof authControllerGetToken>>
>;
